<%- include ('./../helpers/pagination') %>
	<% const collection="sys_user_roles" ; const linkPrefix=systemConfig.prefixAdmin + `/${collection}/`; %>
		<%- include ('./../elements/notify') %>
			<div class="container-fluid">
				<input name="linkPrefix" id="linkPrefix" type="hidden" value="<%= linkPrefix %>">
				<input name="params" id="params" type="hidden" value="<%= params %>">
				<div class="card card-info card-outline">
					<div class="card-header">
						<h6 class="card-title">Form</h6>
						<div class="card-tools">
							<button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip"
								title="Collapse">
								<i class="fas fa-minus"></i>
							</button>
						</div>
					</div>
					<div class="card-body" style="display: block;">
						<form role="form" name="formsys_user_roles" id="formsys_user_roles" autocomplete="off"
							action=" <%= linkPrefix %>searchGet" method="get">
							<div class="form-group row">
								<label id="labid" class="col-sm-2 col-form-label text-sm-right ">Id</label>
								<div class="col-xs-4 col-sm-4">
									<input type="number" readonly name="id" id="id" value="<%= item.id %>"
										class="form-control form-control-sm">
								</div>
								<label id="labrole_id"
									class="col-sm-2 col-form-label text-sm-right required">Role</label>
								<div class="col-xs-4 col-sm-4">
									<div class="dropdown">
										<div id="divDropdownname" class="dropdown-content">
											<input type="text" id="name" name="name" onkeyup="filterSelectBox('name')"
												onfocus="focusDropdown('name')" onblur="blurDropdown('name')"
												class="form-control form-control-sm">
											<input id="role_id" name="role_id" type="hidden">
											<div id="DivContenname" class="Divdropdown-content">
											</div>
										</div>
									</div>
								</div>
								<label id="labuser_id"
									class="col-sm-2 col-form-label text-sm-right required">User</label>
								<div class="col-xs-4 col-sm-4">
									<div class="dropdown">
										<div id="divDropdownlastname" class="dropdown-content">
											<input type="text" id="lastname" name="lastname"
												onkeyup="filterSelectBox('lastname')"
												onfocus="focusDropdown('lastname')" onblur="blurDropdown('lastname')"
												class="form-control form-control-sm">
											<input id="user_id" name="user_id" type="hidden">
											<div id="DivContenlastname" class="Divdropdown-content">
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="form-group row">
								<div class="col-xs-2 col-sm-2"></div>
								<div class="col-xs-10 col-sm-10">
									<button type="button" id="btnSave" class="btn-sm btn-success" title="Save">
										<i class="fa fa-save"></i> Save
									</button>
									&nbsp; <button type="button" id="btnSaveAs" class="btn-sm btn-danger"
										title="Save as">
										<i class="far fa-clone"></i> Save as
									</button>
									&nbsp; <button type="button" id="btnUpdate" class="btn-sm btn-primary"
										title="Update">
										<i class="fa fa-save"></i> Update
									</button>
									&nbsp; <button type="button" id="btnDelete" class="btn-sm btn-danger"
										title="Delete">
										<i class="fas fa-trash-alt"></i> Delete
									</button>
									&nbsp; <button type="button" id="btnSearchPost" class="btn-sm btn-info"
										title="Search">
										<i class="fa fa-search"></i> Search
									</button>
									&nbsp; <button type="submit" id="btnSearchGet" class="btn-sm btn-warning"
										title="Search Get">
										<i class="fa fa-search"></i> Search Get
									</button>
									&nbsp; <button type="button" id="btnExport" class="btn-sm btn-success"
										title="Export">
										<i class="fa fa-download"></i> Export
									</button>
								</div>
							</div>
							<div class="form-group row">
								<div class="text-success" id="divMessage"></div>
							</div>
						</form>
						<input name="idHidden" id="idHidden" type="hidden">
						<input name="listData" id="listData" type="hidden" value="<%= itemString %>">
						<input name="sysLanguage" id="sysLanguage" type="hidden" value="<%= language %>">
						<input name="listDataCatalogue" id="listDataCatalogue" type="hidden" value="<%= catalogue %>">
					</div>
				</div>
				<div class="card card-info card-outline">
					<div class="card-header">
						<h4 class="card-title">List data</h4>
						<div class="card-tools">
							<button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip"
								title="Collapse"><i class="fas fa-minus"></i></button>
						</div>
					</div>
					<div class="card-body">
						<table id="tablesys_user_roles" class="table table-bordered table-hover btn-table mb-0">
							<thead>
								<tr>
									<th class="text-center">
										<div class="custom-control custom-checkbox">
											<input class="custom-control-input cbAll" type="checkbox" id="check-all">
											<label for="check-all" class="custom-control-label"></label>
										</div>
									</th>
									<th class="text-center">
										<label id="labid_tb" data-sort="" data-column="id" class="columnHeader"
											onclick="sortByColumn(this)">
											Id <i class="fa fa-fw" data-column="id"></i>
										</label>
									</th>
									<th class="text-center">
										<label id="labrole_id_tb" data-sort="" data-column="role_id"
											class="columnHeader" onclick="sortByColumn(this)">
											Role <i class="fa fa-fw" data-column="role_id"></i>
										</label>
									</th>
									<th class="text-center">
										<label id="labuser_id_tb" data-sort="" data-column="user_id"
											class="columnHeader" onclick="sortByColumn(this)">
											User <i class="fa fa-fw" data-column="user_id"></i>
										</label>
									</th>
									<th class="text-center">Action</a></th>
								</tr>
							</thead>
							<tbody id="bodyTablesys_user_roles">
								<tr>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
				<div class="form-group row">
					<div class="col-xs-1 col-sm-1">Quantity per page:</div>
					<div class="col-xs-1 col-sm-1">
						<input type="number" class="form-control form-control-sm" name="numberItemPerPage"
							id="numberItemPerPage" size="4">
					</div>
					<div class="col-xs-9 col-sm-9" id="paginationsys_user_roles">
					</div>
				</div>
			</div>
			<script type="application/javascript">
				var language={};
				var listData;
				var linkPrefix=$('#linkPrefix').val();

				onLoadData();
				function onLoadData() {
					getLanguage();
					setUpdateButtonStatus(false)
					setInterfaceText();
					getNumberItemPerPage();
					var strData=$('#listData').val();
					listData=JSON.parse(strData);
					if(listData.length>0) {
						displayDataToTable();
						var paramsString=$('#params').val();
						const params=JSON.parse(paramsString);
						paginationHelper(params.pagination,"sys_user_roles",params.currentStatus,params.keyword,linkPrefix,"paginationsys_user_roles");
					}
				}

				function displayDataToTable() {
					sortDataJson();
					var table=document.getElementById("bodyTablesys_user_roles");
					var lengthtable=table.rows.length-1;
					for(var n=lengthtable;n>=0;n--) {
						table.deleteRow(n);
					}
					var length=listData.length;
					if(length<1) {
						showNoticeDanger(language.Message_NotFoundData);
						return false;
					}

					listData.forEach(function(data) {
						var row=table.insertRow(0);
						var cell0=row.insertCell(0);
						var cell1=row.insertCell(1);
						var cell2=row.insertCell(2);
						var cell3=row.insertCell(3);
						var cell4=row.insertCell(4);
						let check=`<div class="custom-control custom-checkbox"> 
				<input class="custom-control-input" type="checkbox" name="chkListData" id="${data.id}" value="${data.id}">
				<label for="${data.id}" class="custom-control-label"></label>
			</div>`;
						cell0.innerHTML=check;
						cell1.innerHTML=data.id;
						cell2.innerHTML=data.name;
						cell3.innerHTML=data.lastname;
						let strbutton=" <a  onclick=\"getById('"+data.id+"')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">"+
							"<i class=\"fas fa-pencil-alt\"></i>"+
							"</a> "+
							" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\""+data.id+"\" title=\"Delete\"  onclick=\"deleteById(this,"+data.id+")\">";
						strbutton+=" <i class=\"fas fa-trash-alt\"></i> ";
						strbutton+=" </ button > ";
						cell4.innerHTML=strbutton;
					});
				}

				$("#numberItemPerPage").change(function() {
					setNumberItemPerPage();
				});
				function setUpdateButtonStatus(statusUpdate) {
					$('#btnSave').prop('hidden',statusUpdate);
					$('#btnUpdate').prop('hidden',!statusUpdate);
				}

				function getLanguage() {
					var languageString=$('#sysLanguage').val();
					language=JSON.parse(languageString);
				}

				function setInterfaceText() {
					$("#pageTitle").html(language.TitlePage);
					$("#labid").text(language.id);
					$("#labrole_id").text(language.role_id);
					$("#labuser_id").text(language.user_id);
					$("#labid_tb").html(language.id+"<i class=\"fa fa-fw\" data-column=\"id\"></i>");
					$("#labrole_id_tb").html(language.role_id+"<i class=\"fa fa-fw\" data-column=\"role_id\"></i>");
					$("#labuser_id_tb").html(language.user_id+"<i class=\"fa fa-fw\" data-column=\"user_id\"></i>");
				}

				createDataForDropdownLists();
				function createDataForDropdownLists() {
					var strCatalogue=$('#listDataCatalogue').val();
					arrCatalogue=JSON.parse(strCatalogue);
					createDataForDropdown(arrCatalogue[0],'role_id','id','name','name','-- Chose --');
					createDataForDropdown(arrCatalogue[1],'user_id','id','lastname','lastname','-- Chose --');
				}

				closeAllDropdown();
				function closeAllDropdown() {
					var DivContenname=document.getElementById('DivContenname');
					DivContenname.hidden=true;

					var DivContenlastname=document.getElementById('DivContenlastname');
					DivContenlastname.hidden=true;

				}

				function getById(Id) {
					var link=linkPrefix+'getById/'+Id;
					$.ajax({
						type: 'GET',
						url: link,
						dataType: "json",
						success: function(resultdata) {
							var success=resultdata.success;
							if(success==true) {
								showDataToForm(resultdata.data);
							}
						},
						failure: function(response) {
							alert(language.Message_GetItemByIdError);
						},
						error: function(response) {
							alert(language.Message_GetItemByIdError);
						},
					});
				}

				function showDataToForm(data) {
					try {
						setUpdateButtonStatus(true);

						$('#idHidden').val(data.id);
						$('#id').val(data.id);
						$('#role_id').val(data.role_id);
						$('#name').val(data.name);
						$('#user_id').val(data.user_id);
						$('#lastname').val(data.lastname);
					}
					catch(error) {}
				}

				function clearForm() {
					try {
						$('#idHidden').val('');
						setUpdateButtonStatus(false)
						$('#id').val('');
						$('#role_id').val('');
						$('#name').val('');
						$('#user_id').val('');
						$('#lastname').val('');
					}
					catch(error) {}
				}

				$('#btnSearchPost').click(function() {
					$(this).prop('disabled',true);
					getContentPages(1);
				});

				function getContentPages(page) {
					var sortStorage=getSortType(linkPrefix);
					let data={
						Page: page,
						sortColumn: sortStorage.sortColumn,
						sortType: sortStorage.sortType,
						numberItemPerPage: $('#numberItemPerPage').val()
					}
					var link=linkPrefix+'search';
					$.ajax({
						type: 'POST',
						url: link,
						data: data,
						dataType: "json",
						success: function(resultdata) {
							$('#btnSearchPost').prop('disabled',false);
							listData=resultdata.data;
							displayDataToTable();
							let params=resultdata.params;
							paginationHelper(params.pagination,"sys_user_roles","","",linkPrefix,"paginationsys_user_roles");

							if(params.pagination.totalItems>0) {
								var message=language.Message_Find+params.pagination.totalItems+language.Message_Words_records;
								showNoticeSuccess(message);
							}
						},
						failure: function(response) {
							$('#btnSearchPost').prop('disabled',false);
							showNoticeDanger('Search Error');
						},
						error: function(response) {
							$('#btnSearchPost').prop('disabled',false);
							showNoticeDanger('Search Error');
						}
					});
					$('#btnSearchPost').prop('disabled',false);
				}

				$('#btnSave').click(function() {
					$(this).prop('disabled',true);
					saveInsert();
				});

				$('#btnSaveAs').click(function() {
					$(this).prop('disabled',true);
					$('#idHidden').val('');
					$('#id').val('');
					saveInsert();
					$(this).prop('disabled',false);
				});

				function chekValueAndSubmit() {
					if(($('#role_id').val()<0)||($('#role_id').val()>4294967295)) {
						var message=formatMessage(language.role_id+": "+language.Message_Invalid_role_id,'0','4294967295');
						alert(message);
						return false;
					}
					if(($('#user_id').val()<0)||($('#user_id').val()>4294967295)) {
						var message=formatMessage(language.user_id+": "+language.Message_Invalid_user_id,'0','4294967295');
						alert(message);
						return false;
					}
					document.getElementById("formsys_user_roles").submit();
				}

				function getDataForm() {
					if(($('#role_id').val()<0)||($('#role_id').val()>4294967295)) {
						var message=formatMessage(language.role_id+": "+language.Message_Invalid_role_id,'0','4294967295');
						alert(message);
						return false;
					}
					if(($('#user_id').val()<0)||($('#user_id').val()>4294967295)) {
						var message=formatMessage(language.user_id+": "+language.Message_Invalid_user_id,'0','4294967295');
						alert(message);
						return false;
					}
					return {
						'idHidden': $('#idHidden').val(),
						'id': $('#id').val(),
						'role_id': $('#role_id').val(),
						'user_id': $('#user_id').val(),
					}
				}

				function saveInsert() {
					let data=getDataForm();
					if(data==false) {
						$('#btnSave').prop('disabled',false);
						return false;
					}
					var link=linkPrefix+'save';
					$.ajax({
						type: 'post',
						url: link,
						data: data,
						dataType: "json",
						success: function(response) {
							var success=response.success;
							var result=response.data;
							if((success=='false')||(success==false))
								showNoticeDanger(language.Message_AddNewError+' ('+response.message+')');
							else if((success!=true)&&(success!='true'))
								showNoticeDanger(result.message);
							else {
								insertRow(result.data);
								clearForm();
							}
						},
						failure: function(response) {
							showErrorMessageSave(response,language.Message_AddNewError);
						},
						error: function(response) {
							showErrorMessageSave(response,language.Message_AddNewError);
						},
					});
					$('#btnSave').prop('disabled',false);
				}

				function insertRow(data) {
					showNoticeSuccess(language.Message_AddNewSuccess);
					var table=document.getElementById("bodyTablesys_user_roles");
					var row=table.insertRow(1);
					var cell0=row.insertCell(0);
					var cell1=row.insertCell(1);
					var cell2=row.insertCell(2);
					var cell3=row.insertCell(3);
					var cell4=row.insertCell(4);
					let check=`<div class="custom-control custom-checkbox"> 
					<input class="custom-control-input" type="checkbox" name="chkListData" id="${data.id}" value="${data.id}">
					<label for="${data.id}" class="custom-control-label"></label>
				</div>`;
					cell0.innerHTML=check;
					cell1.innerHTML=data.id;
					if(data.role_id==$('#role_id').val()) {
						cell2.innerHTML=$('#name').val();
					}
					if(data.user_id==$('#user_id').val()) {
						cell3.innerHTML=$('#lastname').val();
					}
					let strbutton=" <a  onclick=\"getById('"+data.id+"')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">"+
						"<i class=\"fas fa-pencil-alt\"></i>"+
						"</a> "+
						" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\""+data.id+"\" title=\"Delete\"  onclick=\"deleteById(this,"+data.id+")\">";
					strbutton+=" <i class=\"fas fa-trash-alt\"></i> ";
					strbutton+=" </ button > ";
					cell4.innerHTML=strbutton;
				}

				$('#btnUpdate').click(function() {
					$(this).prop('disabled',true);
					saveUpdate();
				});

				function saveUpdate() {
					let data=getDataForm();
					if(data==false) {
						$('#btnUpdate').prop('disabled',false);
						return false;
					}
					if(data.idHidden=="") {
						$('#btnUpdate').prop('disabled',false);
						showNoticeDanger(language.Message_HaveNotSelectedItemUpdate);
						return false;
					}
					var link=linkPrefix+'update';
					$.ajax({
						type: 'put',
						url: link,
						data: data,
						dataType: "json",
						success: function(response) {
							var success=response.success;
							var result=response.data;
							if((success=='false')||(success==false)) {
								showNoticeDanger(language.Message_UpdateError);
								return false;
							}
							else if((success!=true)&&(success!='true')) {
								showNoticeDanger(result.message);
								return false;
							}
							else {
								updateRow(result.data);
								clearForm();
							}
						},
						failure: function(response) {
							showErrorMessageSave(response,language.Message_UpdateError);
						},
						error: function(response) {
							showErrorMessageSave(response,language.Message_UpdateError);
						}
					});
					$('#btnUpdate').prop('disabled',false);
				}

				function updateRow(data) {
					showNoticeSuccess(language.Message_UpdateSuccess);

					var row=$("#tablesys_user_roles button[data-id='"+data.id+"']").parents("tr")[0];
					var tr="<tr>"+
						"<td class=\"text-center\">"+
						"<div class=\"custom-control custom-checkbox\">"+
						"<input class=\"custom-control-input\" type=\"checkbox\" name=\"chkListData\" id=\""+data.id+"\" value=\""+data.id+"\"> "+
						"<label for=\""+data.id+"\" class=\"custom-control-label\"></label> "+
						"</div>"+
						"</td>";
					tr+="<td class=\"text-center\">"+data.id+"</td>";
					if(data.role_id==$('#role_id').val()) {
						tr+="<td class=\"text-center\">"+$('#name').val()+"</td>";
					}
					if(data.user_id==$('#user_id').val()) {
						tr+="<td class=\"text-center\">"+$('#lastname').val()+"</td>";
					}
					tr+="<td class=\"text-center\">"+
						" <a  onclick=\"getById('"+data.id+"')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">"+
						" <i class=\"fas fa-pencil-alt\"></i>"+
						" </a>"+
						" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\""+data.id+"\" title=\"Delete\"  onclick=\"deleteById(this,'"+data.id+"')\">"+
						" <i class=\"fas fa-trash-alt\"></i> "+
						" </button> "+
						" </td>"+
						" </tr>";
					$(row).after(tr);
					$(row).remove();
				}
				function deleteById(row,IdObject) {
					let message=language.Message_DoYouWantToDeleteById+' '+IdObject+'?';
					var answer=confirm(message)
					if(!answer) {return false;}
					let data={
						'id': IdObject
					};
					var link=linkPrefix+'deleteById';
					$.ajax({
						type: 'delete',
						url: link,
						data: data,
						dataType: "json",
						success: function(resultdata) {
							var success=resultdata.success;
							var message=resultdata.message;
							var notice={};
							if((success=='true')||(success==true)) {
								showNoticeSuccess(language.Message_DeleteSuccess);
								var i=row.parentNode.parentNode.rowIndex;
								document.getElementById("tablesys_user_roles").deleteRow(i);
								return true;
							}
							else if(message.length>10) {
								showNoticeDanger(message);
								return false;
							}
							else {
								showNoticeDanger(language.Message_DeleteFail);
								return false;
							}
						},
						failure: function(response) {
							showNoticeDanger(language.Message_DeleteFail);
						},
						error: function(response) {
							showNoticeDanger(language.Message_DeleteFail);
						}
					});
				}

				$('#btnDelete').click(function() {
					$(this).prop('disabled',true);
					deleteList();
					$(this).prop('disabled',false);
				});
				function deleteList() {
					var arrayId=[];
					var listId=" ";
					$("input:checkbox[name=chkListData]:checked").each(function() {
						arrayId.push($(this).val());
						listId+=$(this).val()+',';
					});
					let message=language.Message_DoYouWantToDeleteInTheList+' '+listId+'?';
					var answer=confirm(message)
					if(!answer) {return false;}
					let data={arrayId};
					var link=linkPrefix+'deleteList';
					$.ajax({
						type: 'delete',
						url: link,
						data: data,
						dataType: "json",
						success: function(resultdata) {
							var result=resultdata.data;
							var success=result.success;
							var message=result.message;
							if((success=='true')||(success==true)) {
								let deleteSuccess=result.deleteSuccess;
								let deleteError=result.deleteError;
								if(deleteSuccess.length>0) {
									let message=language.Message_DeleteSuccess;
									message+=" "+deleteSuccess.toString();
									if(deleteError.length>0) {
										message+=" \n"+language.Message_DeleteFail+" "+deleteError.toString();
									}
									showNoticeSuccess(message);
									deleteRows(arrayId,"bodyTablesys_user_roles");
									return true;
								}
								else if(deleteError.length>0) {
									let message=language.Message_DeleteFail+" "+deleteError.toString();
									showNoticeDanger(message);
								}
								else {
									showNoticeDanger(language.Message_DeleteFail);
								}
							}
							else if((success=='false')||(success==false)) {
								showNoticeDanger(language.Message_DeleteFail);
								return false;
							}
						},
						failure: function(response) {
							showNoticeDanger(language.Message_DeleteFail);
						},
						error: function(response) {
							showNoticeDanger(language.Message_DeleteFail);
						}
					});
				}

				$('#btnExport').click(function() {
					$(this).prop('disabled',true);
					exportData();
					$(this).prop('disabled',false);
				});

				function exportData() {
					let data={
					}
					var link=linkPrefix+'exportData';
					$.ajax({
						type: 'post',
						url: link,
						data: data,
						dataType: "json",
						success: function(resultdata) {
							$('#btnExport').prop('disabled',false);
							let result=resultdata.data;
							showNoticeSuccess(language.Message_CompletedGetData);
							ExportToExcel(result);
						},
						failure: function(response) {
							$('#btnExport').prop('disabled',false);
							showNoticeDanger('Export Error');
						},
						error: function(response) {
							$('#btnExport').prop('disabled',false);
							showNoticeDanger('Export Error');
						}
					});
					$('#btnExport').prop('disabled',false);
				}

				function ExportToExcel(datas) {
					let itemCount=datas.length;
					if(itemCount>1000) {
						showNoticeDanger(language.Message_WarningWhenExportingDataTooMuch);
					}
					if(itemCount<1) {
						showNoticeDanger(language.Message_NotFoundData);
					}
					var strTable='<style type="text/css">';
					strTable+=' .Border { ';
					strTable+='         color: windowtext; ';
					strTable+='         font-size: 11.0pt; ';
					strTable+='         word-break:break-all;';
					strTable+='         font-style: normal; ';
					strTable+='         text-decoration: none; ';
					strTable+='         font-family: "Times New Roman", serif; ';
					strTable+='         text-align: left; ';
					strTable+='         vertical-align: bottom;';
					strTable+='         border-left: .5pt solid windowtext; ';
					strTable+='         border-right: .5pt solid windowtext; ';
					strTable+='         border-top: .5pt solid windowtext; ';
					strTable+='         border-bottom: .5pt solid windowtext; ';
					strTable+='         padding-left: 1px; ';
					strTable+='         padding-right: 1px; ';
					strTable+='         padding-top: 1px; ';
					strTable+='     } ';

					strTable+=' .BorderHeader { ';
					strTable+='        color: white; ';
					strTable+='         background-color:#0026ff; ';
					strTable+='        font-size: 11.0pt; ';
					strTable+='        text-align: center; ';
					strTable+='        font-style: normal; ';
					strTable+='        text-decoration: none; ';
					strTable+='        font-family: "Times New Roman", serif; ';
					strTable+='        vertical-align: bottom;';
					strTable+='        border-left: .5pt solid windowtext; ';
					strTable+='        border-right: .5pt solid windowtext; ';
					strTable+='        border-top: .5pt solid windowtext; ';
					strTable+='        border-bottom: .5pt solid windowtext; ';
					strTable+='        padding-left: 1px; ';
					strTable+='        padding-right: 1px; ';
					strTable+='        padding-top: 1px; ';
					strTable+='     } ';
					strTable+='  </style> ';
					strTable+=' <table id="testTable"  border="1" frame="hsides" rules="groups" summary="Code page support in different versions of MS Windows."> ';
					strTable+='<tr class="BorderHeader" style="background - color:#0026ff; color:#fff"> ';
					strTable+='<th class="BorderHeader" >Order</th> ';
					strTable+='<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> Id </th> ';
					strTable+='<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> Role </th> ';
					strTable+='<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> User </th> ';
					strTable+='</tr> ';
					var n=0;
					var currentRow=4;
					for(var i=0;i<itemCount;i++) {
						var vTemp=datas[i];
						currentRow+=1;
						n+=1;
						strTable+='<tr >';
						strTable+='<th class="Border" > '+n+' </th> ';
						strTable+='<th  class="Border" > '+vTemp.id+' </th> ';
						strTable+='<th  class="Border" > '+vTemp.role_id+' </th> ';
						strTable+='<th  class="Border" > '+vTemp.user_id+' </th> ';
						strTable+='</tr>';
					}
					strTable+=' </table> ';
					ExportHtmlToExcel(strTable,'sys_user_roles');
					showNoticeSuccess(language.Message_ExportSuccess);
				}

			</script>